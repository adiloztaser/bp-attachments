{"mappings":"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","sources":["src/media-library/store/constants.js","src/media-library/utils/functions.js","src/media-library/store/selectors.js","src/media-library/store/action-types.js","src/media-library/store/actions.js","src/media-library/store/resolvers.js","src/media-library/store/reducers.js","src/media-library/store/controls.js","src/media-library/store/index.js","src/media-library/elements/header.js","src/media-library/elements/uploader.js","src/media-library/elements/directory-creator.js","src/media-library/elements/toolbar.js","src/media-library/utils/set-template.js","src/media-library/elements/item.js","src/media-library/elements/notices.js","src/media-library/elements/main.js","src/media-library/index.js"],"sourcesContent":["/**\n * Identifier key for this store reducer.\n *\n * @type {string}\n */\n export const STORE_KEY = 'bp/attachments';\n","/**\n * WordPress dependencies\n */\nconst {\n\ti18n: {\n\t\t__,\n\t},\n} = wp;\n\n/**\n * External dependencies\n */\nconst { filter } = lodash;\n\nexport const getDirectoryAncestors = ( tree, parentId ) => {\n\tlet parents = filter( tree, { id: parentId } );\n\n\tparents.forEach( ( parent ) => {\n\t\tconst grandParents = getDirectoryAncestors( tree, parent.parent );\n\t\tparents = [ ...parents, ...grandParents ];\n\t} );\n\n\treturn parents;\n}\n\nexport const bytesToSize = ( bytes ) => {\n\tconst sizes = [\n\t\t__( 'Bytes', 'bp-attachments' ),\n\t\t__( 'KB', 'bp-attachments' ),\n\t\t__( 'MB', 'bp-attachments' ),\n\t\t__( 'GB', 'bp-attachments' ),\n\t\t__( 'TB', 'bp-attachments' ),\n\t];\n\n\tif ( bytes === 0 ) {\n\t\treturn '0 ' + sizes[0];\n\t}\n\n\tconst i = parseInt( Math.floor( Math.log( bytes ) / Math.log( 1024 ) ), 10 );\n\n\tif ( i === 0 ) {\n\t\treturn `${bytes} ${sizes[i]}`;\n\t}\n\n\treturn `${ ( bytes / ( 1024 ** i ) ).toFixed( 1 ) } ${ sizes[ i ] }`;\n}\n","/**\n * External dependencies.\n */\nconst {\n\ttrim,\n\tgroupBy,\n\tfilter,\n\tindexOf,\n\tfind,\n\tdefaultTo,\n} = lodash;\n\n/**\n * Internal dependencies.\n */\nimport { getDirectoryAncestors } from '../utils/functions';\n\n/**\n * Returns the Community Media Library settings.\n *\n * @param {Object} state\n * @returns {Object} The Community Media Library settings.\n */\nexport const getSettings = ( state ) => {\n\tconst { settings } = state;\n\treturn settings;\n}\n\n/**\n * Returns the requests context.\n *\n * @param {Object} state\n * @returns {string} The requests context (`edit` or `view`).\n */\nexport const getRequestsContext = ( state ) => {\n\tconst {\n\t\tsettings: {\n\t\t\tisAdminScreen,\n\t\t}\n\t} = state;\n\n\treturn true === isAdminScreen ? 'edit' : 'view';\n}\n\n/**\n * Returns whether the display mode is Grid or not.\n *\n * @param {Object} state The current state.\n * @return {boolean} True if the display mode is Grid. False otherwise.\n */\nexport const isGridDisplayMode = ( state ) => {\n\tconst { isGrid } = state;\n\treturn isGrid;\n}\n\n/**\n * Returns the logged in user Object.\n *\n * @param {Object} state The current state.\n * @return {Object} The logged in user Object.\n */\nexport const getLoggedInUser = ( state ) => {\n\tconst { user } = state;\n\treturn user;\n};\n\n/**\n * Returns whether the display mode is Grid or not.\n *\n * @param {Object} state The current state.\n * @return {boolean} True if the display mode is Grid. False otherwise.\n */\nexport const getFormState = ( state ) => {\n\tconst { formState } = state;\n\treturn formState;\n}\n\n/**\n * Returns whether an upload is being processed.\n *\n * @param {Object} state The current state.\n * @return {boolean} True if an uploads is being processed. False otherwise.\n */\nexport const isUploading = ( state ) => {\n\tconst { uploading } = state;\n\treturn uploading;\n};\n\n/**\n * Returns whether an upload has been processed.\n *\n * @param {Object} state The current state.\n * @return {boolean} True if an uploads has been processed. False otherwise.\n */\n export const uploadEnded = ( state ) => {\n\tconst { ended } = state;\n\treturn ended;\n};\n\n/**\n * Returns the list of uploaded file Objects.\n *\n * @param {Object} state The current state.\n * @return {array} The list of uploaded file Objects.\n */\nexport const getUploads = ( state ) => {\n\tconst { uploads } = state;\n\treturn uploads;\n};\n\n/**\n * Returns the list of errors.\n *\n * @param {Object} state The current state.\n * @return {array} The list of errors.\n */\nexport const getErrors = ( state ) => {\n\tconst { errors } = state;\n\treturn errors;\n};\n\n/**\n * Returns the list community media objects.\n *\n * @param {Object} state The current state.\n * @return {array} The list of community media objects.\n */\nexport const getMedia = ( state ) => {\n\tconst { files } = state;\n\treturn files;\n};\n\n/**\n * Returns the current directory.\n *\n * @param {Object} state The current state.\n * @return {string} The current directory.\n */\nexport const getCurrentDirectory = ( state ) => {\n\tconst { currentDirectory } = state;\n\treturn currentDirectory || '';\n};\n\n/**\n * Returns the current directory object.\n *\n * @param {Object} state The current state.\n * @return {Object} The current directory object.\n */\n export const getCurrentDirectoryObject = ( state ) => {\n\tconst { currentDirectory, tree } = state;\n\tconst defaultValue = { readonly: true };\n\n\tif ( '' !== currentDirectory ) {\n\t\treturn defaultTo(\n\t\t\tfind( tree, { id: currentDirectory } ),\n\t\t\tdefaultValue\n\t\t);\n\t}\n\n\treturn defaultValue;\n};\n\n/**\n * Returns the directories Tree.\n *\n * @param {Object} state The current state.\n * @return {array} The directories Tree.\n */\n export const getTree = ( state ) => {\n\tconst { tree, currentDirectory } = state;\n\tconst groupedTree = groupBy( tree, 'parent' );\n\tconst currentChildrenIds = filter( tree, { 'parent': currentDirectory || 0 } ).map( ( child ) => child.id );\n\n\t// Makes sure to only list current directory children.\n\tif ( currentChildrenIds && currentChildrenIds.length ) {\n\t\tcurrentChildrenIds.forEach( ( childId ) => {\n\t\t\tif ( groupedTree[ childId ] ) {\n\t\t\t\tdelete groupedTree[ childId ];\n\t\t\t}\n\t\t} );\n\t}\n\n\t// Makes sure to avoid listing children of directories that are not an ancestor of the currentDirectory one.\n\tif ( currentDirectory ) {\n\t\tconst currentAncestors = getDirectoryAncestors(\n\t\t\ttree,\n\t\t\tcurrentDirectory\n\t\t).map( ( ancestor ) => ancestor.id );\n\n\t\tObject.keys( groupedTree ).forEach( ( treeIndex ) => {\n\t\t\tif ( 0 !== parseInt( treeIndex, 10 ) && -1 === indexOf( currentAncestors, treeIndex ) ) {\n\t\t\t\tdelete groupedTree[ treeIndex ];\n\t\t\t}\n\t\t} );\n\t}\n\n\tconst fillWithChildren = ( items ) => {\n\t\treturn items.map( ( item ) => {\n\t\t\tconst children = groupedTree[ item.id ];\n\t\t\treturn {\n\t\t\t\t...item,\n\t\t\t\tchildren: children && children.length ?\n\t\t\t\t\tfillWithChildren( children ) :\n\t\t\t\t\t[],\n\t\t\t};\n\t\t} );\n\t};\n\n\treturn fillWithChildren( groupedTree[0] || [] );\n};\n\n/**\n * Returns the directory flat list.\n *\n * @param {Object} state The current state.\n * @return {array} The directory flat list.\n */\n export const getFlatTree = ( state ) => {\n\tconst { tree } = state;\n\treturn tree || [];\n};\n\n/**\n * Returns whether a media/directory item is selectable.\n *\n * @param {Object} state The current state.\n * @return {boolean} True if a media/directory item is selectable. False otherwise.\n */\nexport const isSelectable = ( state ) => {\n\tconst { isSelectable } = state;\n\treturn isSelectable;\n};\n\n/**\n * Returns the current relative path.\n *\n * @param {Object} state The current state.\n * @return {string} The current relative path.\n */\nexport const getRelativePath = ( state ) => {\n\tconst { relativePath } = state;\n\treturn relativePath;\n};\n\n/**\n * Returns the destination data for media.\n *\n * @param {Object} state The current state.\n * @return {Object} The destination data for media.\n */\nexport const getDestinationData = ( state ) => {\n\tconst { relativePath } = state;\n\n\tif ( ! relativePath ) {\n\t\treturn {\n\t\t\tobject: 'members',\n\t\t}\n\t}\n\n\tconst destinationData = trim( relativePath, '/' ).split( '/' );\n\n\treturn {\n\t\tstatus: destinationData[0] ? destinationData[0] : 'public',\n\t\tobject: 'groups' === destinationData[1] ? 'groups' : 'members',\n\t\titem: destinationData[2] ? destinationData[2] : '',\n\t}\n};\n","export const TYPES = {\n\tSET_SETTINGS: 'SET_SETTINGS',\n\tGET_LOGGED_IN_USER: 'GET_LOGGED_IN_USER',\n\tGET_MEDIA: 'GET_MEDIA',\n\tADD_MEDIUM: 'ADD_MEDIUM',\n\tFILL_TREE: 'FILL_TREE',\n\tDESTROY_MEDIUM: 'DESTROY_MEDIUM',\n\tFETCH_FROM_API: 'FETCH_FROM_API',\n\tCREATE_FROM_API: 'CREATE_FROM_API',\n\tDELETE_FROM_API: 'DELETE_FROM_API',\n\tUPLOAD_START: 'UPLOAD_START',\n\tUPLOAD_END: 'UPLOAD_END',\n\tRESET_UPLOADS: 'RESET_UPLOADS',\n\tADD_ERROR: 'ADD_ERROR',\n\tREMOVE_ERROR: 'REMOVE_ERROR',\n\tTOGGLE_SELECTABLE: 'TOGGLE_SELECTABLE',\n\tTOGGLE_MEDIA_SELECTION: 'TOGGLE_MEDIA_SELECTION',\n\tSWITCH_DISPLAY_MODE: 'SWITCH_DISPLAY_MODE',\n\tUPDATE_FORM_STATE: 'UPDATE_FORM_STATE',\n};\n","/**\n * External dependencies.\n */\n const {\n\tuniqueId,\n\thasIn,\n\ttrim,\n\ttrimEnd,\n\tfilter,\n} = lodash;\n\n/**\n * WordPress dependencies.\n */\nconst {\n\tdata: {\n\t\tdispatch,\n\t\tselect,\n\t},\n\turl: {\n\t\taddQueryArgs,\n\t}\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { TYPES as types } from './action-types';\nimport { STORE_KEY } from './constants';\n\n/**\n * Returns an action to set the BP attachments Media Library settings.\n *\n * @param {Object} settings The settings to use.\n * @return {Object} Object for action.\n */\nexport function setSettings( settings ) {\n\treturn {\n\t\ttype: types.SET_SETTINGS,\n\t\tsettings,\n\t};\n}\n\n/**\n * Returns an action object used to fetch media from the API.\n *\n * @param {string} path Endpoint path.\n * @param {boolean} parse Should we parse the request.\n * @return {Object} Object for action.\n */\nexport function fetchFromAPI( path, parse ) {\n\treturn {\n\t\ttype: types.FETCH_FROM_API,\n\t\tpath,\n\t\tparse,\n\t};\n}\n\n/**\n * Returns an action object used to create media via the API.\n *\n * @param {string} path Endpoint path.\n * @param {Object} data The data to be created.\n * @return {Object} Object for action.\n */\nexport function createFromAPI( path, data ) {\n\treturn {\n\t\ttype: types.CREATE_FROM_API,\n\t\tpath,\n\t\tdata,\n\t};\n}\n\n/**\n * Returns an action object used to delete a media via the API.\n *\n * @param {string} path Endpoint path.\n * @param {Object} data The data to be created.\n * @return {Object} Object for action.\n */\nexport function deleteFromAPI( path, relativePath ) {\n\treturn {\n\t\ttype: types.DELETE_FROM_API,\n\t\tpath,\n\t\trelativePath,\n\t};\n}\n\n/**\n * Returns an action object used to switch between Grid & List mode.\n *\n * @param {Boolean} isGrid\n * @returns {Object} Object for action.\n */\nexport function switchDisplayMode( isGrid ) {\n\treturn {\n\t\ttype: types.SWITCH_DISPLAY_MODE,\n\t\tisGrid,\n\t};\n}\n\n/**\n * Returns an action object used to get the logged in user.\n *\n * @param {Object} user Logged In User object.\n * @return {Object} Object for action.\n */\nexport function getLoggedInUser( user ) {\n\treturn {\n\t\ttype: types.GET_LOGGED_IN_USER,\n\t\tuser,\n\t};\n}\n\n/**\n * Returns an action object used to get media.\n *\n * @param {Array} files The list of files.\n * @param {String} relativePath The relative path.\n * @param {Object} currentDirectory The current directory.\n * @return {Object} Object for action.\n */\nexport function getMedia( files, relativePath, currentDirectory ) {\n\treturn {\n\t\ttype: types.GET_MEDIA,\n\t\tfiles,\n\t\trelativePath,\n\t\tcurrentDirectory,\n\t};\n};\n\n/**\n * Returns an action object used to update the Upload/Directory Form state.\n *\n * @param {Object} params\n * @returns {Object} Object for action.\n */\nexport function updateFormState( params ) {\n\treturn {\n\t\ttype: types.UPDATE_FORM_STATE,\n\t\tparams,\n\t};\n}\n\n/**\n * Init the directories Tree.\n *\n * @param {array} items The list of media.\n */\nexport function initTree( items ) {\n\tconst tree = select( STORE_KEY ).getTree();\n\tconst directories = filter( items, { 'mime_type': 'inode/directory' } );\n\tif ( ! tree.length ) {\n\t\tdirectories.forEach( ( item ) => {\n\t\t\tdispatch( STORE_KEY ).addItemTree( {\n\t\t\t\tid: item.id,\n\t\t\t\tslug: item.name,\n\t\t\t\tname: item.title,\n\t\t\t\tparent: 0,\n\t\t\t\tobject: item.object ? item.object : 'members',\n\t\t\t\treadonly: item.readonly ? item.readonly : false,\n\t\t\t} );\n\t\t} );\n\t}\n}\n\n/**\n * Returns an action object used to add a directory item to the Items tree.\n *\n * @param {Object} item A media item.\n * @return {Object} Object for action.\n */\nexport function addItemTree( item ) {\n\treturn {\n\t\ttype: types.FILL_TREE,\n\t\titem,\n\t};\n};\n\n/**\n * Returns an action object used to switch between Selectable & Regular mode.\n *\n * @param {boolean} isSelectable True to switch to Selectable mode. False otherwise.\n * @returns {Object} Object for action.\n */\nexport function toggleSelectable( isSelectable ) {\n\treturn {\n\t\ttype: types.TOGGLE_SELECTABLE,\n\t\tisSelectable,\n\t};\n};\n\n/**\n * Returns an action object used to switch between Selectable & Regular mode.\n *\n * @param {array} ids The list of media ID.\n * @param {boolean} isSelected True if the media is selected. False otherwise.\n * @returns {Object} Object for action.\n */\nexport function toggleMediaSelection( ids, isSelected ) {\n\treturn {\n\t\ttype: types.TOGGLE_MEDIA_SELECTION,\n\t\tids,\n\t\tisSelected,\n\t};\n};\n\n/**\n * Returns an action object used to add a new file to the Media list.\n *\n * @param {object} file The uploaded medium.\n * @returns {Object} Object for action.\n */\nexport function addMedium( file ) {\n\treturn {\n\t\ttype: types.ADD_MEDIUM,\n\t\tfile,\n\t};\n};\n\n/**\n * Returns an action object used to add a new error.\n *\n * @param {object} error The uploaded file which errored.\n * @returns {Object} Object for action.\n */\nexport function addMediumError( error ) {\n\treturn {\n\t\ttype: types.ADD_ERROR,\n\t\terror,\n\t};\n};\n\n/**\n * Creates a Medium uploading a file.\n *\n * @param {Object} file The file object to upload.\n * @returns {Object} Object for action.\n */\nexport function * createMedium( file ) {\n\tlet uploading = true, upload;\n\tconst store = select( STORE_KEY );\n\tconst { object, item, status } = store.getDestinationData();\n\tconst relativePath = store.getRelativePath();\n\n\tyield { type: 'UPLOAD_START', uploading, file };\n\n\tconst formData = new FormData();\n\tformData.append( 'file', file );\n\tformData.append( 'action', 'bp_attachments_media_upload' );\n\n\tif ( 'groups' === object ) {\n\t\tformData.append( 'object', object );\n\t\tformData.append( 'object_slug', item );\n\t} else {\n\t\tformData.append( 'object_id', item );\n\t}\n\n\tif ( status ) {\n\t\tformData.append( 'status', status );\n\t}\n\n\tif ( trim( relativePath, '/' ) !== status + '/' + object + '/' + item ) {\n\t\tformData.append( 'parent_dir', relativePath );\n\t}\n\n\tuploading = false;\n\ttry {\n\t\tupload = yield createFromAPI( '/buddypress/v1/attachments', formData );\n\t\tyield { type: 'UPLOAD_END', uploading, upload };\n\t\tupload.uploaded = true;\n\n\t\treturn addMedium( upload );\n\t} catch ( error ) {\n\t\tupload = {\n\t\t\tid: uniqueId(),\n\t\t\tname: file.name,\n\t\t\terror: error.message,\n\t\t\tuploaded: false,\n\t\t};\n\n\t\tyield { type: 'UPLOAD_END', uploading, upload };\n\n\t\treturn addMediumError( upload );\n\t}\n}\n\n/**\n * Creates a new directory, photo album, audio or video playluist.\n *\n * NB: to avoid duplicating code, createDirectory & createMedium should probably be\n * one function.\n *\n * @param {Object} directory The data to use create the directory\n * @returns {Object} Object for action.\n */\nexport function * createDirectory( directory ) {\n\tlet uploading = true, upload;\n\n\t// A directory is handled as a file having the inode/directory mime type.\n\tlet file = {\n\t\tname: directory.directoryName,\n\t\ttype: directory.directoryType,\n\t};\n\n\tconst store = select( STORE_KEY );\n\tconst { object, item, status } = store.getDestinationData();\n\tconst relativePath = store.getRelativePath();\n\n\tyield { type: 'UPLOAD_START', uploading, file };\n\n\tconst formData = new FormData();\n\tformData.append( 'directory_name', file.name );\n\tformData.append( 'directory_type', file.type );\n\tformData.append( 'action', 'bp_attachments_make_directory' );\n\n\tif ( 'groups' === object ) {\n\t\tformData.append( 'object', object );\n\t\tformData.append( 'object_slug', item );\n\t} else {\n\t\tformData.append( 'object_id', item );\n\t}\n\n\tif ( status ) {\n\t\tformData.append( 'status', status );\n\t}\n\n\tif ( trim( relativePath, '/' ) !== status + '/' + object + '/' + item ) {\n\t\tformData.append( 'parent_dir', relativePath );\n\t}\n\n\tuploading = false;\n\ttry {\n\t\tupload = yield createFromAPI( '/buddypress/v1/attachments', formData );\n\t\tyield { type: 'UPLOAD_END', uploading, upload };\n\t\tupload.uploaded = true;\n\n\t\treturn addMedium( upload );\n\t} catch ( error ) {\n\t\tupload = {\n\t\t\tid: uniqueId(),\n\t\t\tname: file.name,\n\t\t\terror: error.message,\n\t\t\tuploaded: false,\n\t\t};\n\n\t\tyield { type: 'UPLOAD_END', uploading, upload };\n\n\t\treturn addMediumError( upload );\n\t}\n}\n\n/**\n * Parses the request response and edit Media store.\n *\n * @param {Object} response The request response.\n * @param {String} relativePath The relative path of the medium.\n * @param {String} parent The parent directory.\n * @returns {void}\n */\nexport const parseResponseMedia = async ( response, relativePath, parent = '' ) => {\n\tconst items = await response.json().then( ( data ) => {\n\t\tdata.forEach( ( item ) => {\n\t\t\titem.parent = parent;\n\n\t\t\tif ( 'inode/directory' === item.mime_type ) {\n\t\t\t\tdispatch( STORE_KEY ).addItemTree( {\n\t\t\t\t\tid: item.id,\n\t\t\t\t\tslug: item.name,\n\t\t\t\t\tname: item.title,\n\t\t\t\t\tparent: item.parent,\n\t\t\t\t\tobject: item.object ? item.object : 'members',\n\t\t\t\t\treadonly: item.readonly ? item.readonly : false,\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\treturn data;\n\t} );\n\n\t// Init the Tree when needed.\n\tif ( ! relativePath && ! parent ) {\n\t\tinitTree( items );\n\t}\n\n\tdispatch( STORE_KEY ).getMedia( items, relativePath, parent );\n}\n\n/**\n * Requests media according to specific arguments.\n *\n * @param {Object} args The Media request arguments.\n * @returns {void}\n */\nexport function * requestMedia( args = {} ) {\n\tconst path = '/buddypress/v1/attachments';\n\tlet relativePathHeader = '';\n\tlet parent = '';\n\n\tif ( ! args.context ) {\n\t\targs.context = select( STORE_KEY ).getRequestsContext();\n\t}\n\n\tif ( args.directory && args.path ) {\n\t\targs.directory = trimEnd( args.path, '/' ) + '/' + args.directory;\n\t}\n\n\tif ( args.parent ) {\n\t\tparent = args.parent;\n\t\tdelete args.parent;\n\t}\n\n\tdelete args.path;\n\n\tconst response = yield fetchFromAPI( addQueryArgs( path, args ), false );\n\n\tif ( hasIn( response, [ 'headers', 'get' ] ) ) {\n\t\t// If the request is fetched using the fetch api, the header can be\n\t\t// retrieved using the 'get' method.\n\t\trelativePathHeader = response.headers.get( 'X-BP-Attachments-Relative-Path' );\n\t} else {\n\t\t// If the request was preloaded server-side and is returned by the\n\t\t// preloading middleware, the header will be a simple property.\n\t\trelativePathHeader = get( response, [ 'headers', 'X-BP-Attachments-Relative-Path' ], '' );\n\t}\n\n\treturn parseResponseMedia( response, relativePathHeader, parent );\n}\n\n/**\n * @todo\n * @param {*} id\n * @returns\n */\nexport function destroyMedium( id ) {\n\treturn {\n\t\ttype: 'DESTROY_MEDIUM',\n\t\tid,\n\t}\n};\n\n/**\n * @todo\n * @param {*} path\n * @param {*} relativePath\n * @returns\n */\n export function deleteMedium( path, relativePath ) {\n\treturn {\n\t\ttype: 'DELETE_FROM_API',\n\t\tpath,\n\t\trelativePath,\n\t};\n};\n\n/**\n * @todo\n * @param {*} medium\n * @returns\n */\nexport function * removeMedium( medium ) {\n\tconst currentState = select( STORE_KEY ).getState();\n\tconst { relativePath } = currentState;\n\tlet deleted;\n\n\ttry {\n\t\tdeleted = yield deleteMedium( '/buddypress/v1/attachments/' + medium.id + '/', relativePath );\n\n\t\treturn destroyMedium( deleted.previous.id );\n\t} catch ( error ) {\n\t\tmedium.error = error.message;\n\n\t\treturn addMediumError( medium );\n\t}\n}\n\n/**\n * Returns an action object used to remove an error.\n *\n * @param {integer} errorID The error ID.\n * @returns {Object} Object for action.\n */\nexport function removeMediumError( errorID ) {\n\treturn {\n\t\ttype: types.REMOVE_ERROR,\n\t\terrorID,\n\t};\n}\n","/**\n * External dependencies.\n */\nconst {\n\tfilter,\n} = lodash;\n\n/**\n * Internal dependencies.\n */\nimport {\n\tfetchFromAPI,\n\tinitTree,\n\tgetLoggedInUser as getLoggedInUserAction,\n\tgetMedia as getMediaAction,\n} from './actions';\n\n/**\n * Returns the requests context.\n *\n * @access private\n * @returns {string} The requests context (view or edit).\n */\nconst _requestContext = () => {\n\tconst { isAdminScreen } = window.bpAttachmentsMediaLibrarySettings || {};\n\treturn isAdminScreen && true === isAdminScreen ? 'edit' : 'view';\n}\n\n/**\n * Resolver for retrieving current user.\n */\nexport function* getLoggedInUser() {\n\tconst path = '/buddypress/v1/members/me?context=edit';\n\tconst user = yield fetchFromAPI( path, true );\n\tyield getLoggedInUserAction( user );\n};\n\n/**\n * Resolver for retrieving the media root directories.\n */\nexport function* getMedia() {\n\tconst path = '/buddypress/v1/attachments?context=' + _requestContext();\n\tconst files = yield fetchFromAPI( path, true );\n\n\t// Init the Directories tree.\n\tinitTree( files );\n\n\tyield getMediaAction( files, '' );\n}\n","/**\n * External dependencies.\n */\n const {\n\treject,\n} = lodash;\n\n/**\n * Internal dependencies\n */\nimport { TYPES as types } from './action-types';\n\n/**\n * Default state.\n */\nconst DEFAULT_STATE = {\n\tuser: {},\n\ttree: [],\n\tcurrentDirectory: '',\n\tfiles: [],\n\trelativePath: '',\n\tuploads: [],\n\terrors: [],\n\tuploading: false,\n\tended: false,\n\tisSelectable: false,\n\tisGrid: true,\n\tsettings: {},\n\tformState: {},\n};\n\n/**\n * Reducer for the BP Attachments Library.\n *\n * @param   {Object}  state   The current state in the store.\n * @param   {Object}  action  Action object.\n *\n * @return  {Object}          New or existing state.\n */\n const reducer = ( state = DEFAULT_STATE, action ) => {\n\tswitch ( action.type ) {\n\t\tcase types.SET_SETTINGS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsettings: action.settings,\n\t\t\t};\n\n\t\tcase types.GET_LOGGED_IN_USER:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuser: action.user,\n\t\t\t};\n\n\t\tcase types.GET_MEDIA:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfiles: action.files,\n\t\t\t\trelativePath: action.relativePath,\n\t\t\t\tcurrentDirectory: action.currentDirectory,\n\t\t\t};\n\n\t\tcase types.FILL_TREE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttree: [\n\t\t\t\t\t...reject( state.tree, [ 'id', action.item.id ] ),\n\t\t\t\t\taction.item,\n\t\t\t\t],\n\t\t\t};\n\n\t\tcase types.UPDATE_FORM_STATE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tformState: action.params,\n\t\t\t};\n\n\t\tcase types.ADD_MEDIUM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfiles: [\n\t\t\t\t\t...reject( state.files, [ 'id', action.file.id ] ),\n\t\t\t\t\taction.file,\n\t\t\t\t],\n\t\t\t};\n\n\t\tcase types.UPLOAD_START:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuploading: action.uploading,\n\t\t\t\tuploads: [\n\t\t\t\t\t...state.uploads,\n\t\t\t\t\taction.file,\n\t\t\t\t],\n\t\t\t};\n\n\t\tcase types.ADD_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terrors: [\n\t\t\t\t\t...state.errors,\n\t\t\t\t\taction.error,\n\t\t\t\t],\n\t\t\t};\n\n\t\tcase types.REMOVE_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terrors: reject( state.errors, [ 'id', action.errorID ] ),\n\t\t\t};\n\n\t\tcase types.UPLOAD_END:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuploading: action.uploading,\n\t\t\t\tuploads: reject( state.uploads, ( u ) => { return u.name === action.upload.name || u.name === action.upload.title; } ),\n\t\t\t\tended: true,\n\t\t\t};\n\n\t\tcase types.RESET_UPLOADS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuploading: false,\n\t\t\t\tuploads: [],\n\t\t\t\terrors:[],\n\t\t\t\tended: false,\n\t\t\t};\n\n\t\tcase types.TOGGLE_SELECTABLE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisSelectable: action.isSelectable,\n\t\t\t};\n\n\t\tcase types.TOGGLE_MEDIA_SELECTION:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfiles: state.files.map( file => {\n\t\t\t\t\tif ( ( 'all' === action.ids[0] && ! action.isSelected ) || ( -1 !== action.ids.indexOf( file.id ) ) ) {\n\t\t\t\t\t\tfile.selected = action.isSelected;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn file;\n\t\t\t\t} ),\n\t\t\t};\n\n\t\tcase types.SWITCH_DISPLAY_MODE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisGrid: action.isGrid,\n\t\t\t};\n\n\t\tcase types.DESTROY_MEDIUM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfiles: [\n\t\t\t\t\t...reject( state.files, [ 'id', action.id ] )\n\t\t\t\t],\n\t\t\t};\n\t}\n\n\treturn state;\n};\n\nexport default reducer;\n","/**\n * WordPress dependencies.\n */\nconst {\n\tapiFetch,\n} = wp;\n\n/**\n * Default export for registering the controls with the store.\n *\n * @return {Object} An object with the controls to register with the store on\n *                  the controls property of the registration object.\n */\nexport const controls = {\n\tFETCH_FROM_API( { path, parse } ) {\n\t\treturn apiFetch( { path, parse } );\n\t},\n\tCREATE_FROM_API( { path, data } ) {\n\t\treturn apiFetch(\n\t\t\t{\n\t\t\t\tpath: path,\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: data\n\t\t\t}\n\t\t);\n\t},\n\tDELETE_FROM_API( { path, relativePath } ) {\n\t\treturn apiFetch( { path: path, method: 'DELETE', data: {\n\t\t\trelative_path: relativePath\n\t\t} } );\n\t}\n};\n","/**\n * WordPress dependencies.\n */\n const {\n\tdata: {\n\t\tregisterStore,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { STORE_KEY } from './constants';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\nimport * as resolvers from './resolvers';\nimport reducer from './reducers';\nimport { controls } from './controls';\n\nregisterStore( STORE_KEY, {\n\treducer,\n\tactions,\n\tselectors,\n\tcontrols,\n\tresolvers,\n} );\n\nexport const BP_ATTACHMENTS_STORE_KEY = STORE_KEY;\n","/**\n * WordPress dependencies\n */\nconst {\n\tcomponents: {\n\t\tPopover,\n\t},\n\tdata: {\n\t\tuseDispatch,\n\t\tuseSelect,\n\t},\n\telement: {\n\t\tcreateElement,\n\t\tFragment,\n\t\tuseState,\n\t},\n\ti18n: {\n\t\t__,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from '../store';\n\n/**\n * Header element.\n */\nconst MediaLibraryHeader = ( { settings } ) => {\n\tconst { updateFormState } = useDispatch( BP_ATTACHMENTS_STORE_KEY );\n\tconst currentDirectoryObject = useSelect( ( select ) => {\n\t\treturn select( BP_ATTACHMENTS_STORE_KEY ).getCurrentDirectoryObject();\n\t}, [] );\n\tconst [ isOpen, setOpen ] = useState( false );\n\tconst toggleClass = true === isOpen ? 'split-button is-open' : 'split-button';\n\tconst dashiconClass = true === isOpen ? 'dashicons dashicons-arrow-up-alt2' : 'dashicons dashicons-arrow-down-alt2';\n\tconst canUpload = true !== currentDirectoryObject.readonly;\n\tconst { allowedMediaTypes } = settings;\n\n\tconst showUploadForm = ( e ) => {\n\t\te.preventDefault();\n\n\t\treturn updateFormState(\n\t\t\t{\n\t\t\t\tparentDirectory: currentDirectoryObject.id,\n\t\t\t\taction: 'upload',\n\t\t\t}\n\t\t);\n\t};\n\n\tconst showCreateDirForm = ( e, type ) => {\n\t\te.preventDefault();\n\n\t\treturn updateFormState(\n\t\t\t{\n\t\t\t\tparentDirectory: currentDirectoryObject.id,\n\t\t\t\taction: 'createDirectory',\n\t\t\t\tdirectoryType: type,\n\t\t\t}\n\t\t);\n\t};\n\n\tlet dirOptions = [\n\t\t{\n\t\t\tid: 'folder',\n\t\t\ttext: __( 'Add new directory', 'bp-attachments' ),\n\t\t}\n\t];\n\n\tif ( allowedMediaTypes ) {\n\t\tObject.keys( allowedMediaTypes ).forEach( ( directoryType ) => {\n\t\t\tif ( 'image' === directoryType ) {\n\t\t\t\tdirOptions.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'album',\n\t\t\t\t\t\ttext: __( 'Add new photo album', 'bp-attachments' ),\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t} else if ( 'audio' === directoryType ) {\n\t\t\t\tdirOptions.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'audio_playlist',\n\t\t\t\t\t\ttext: __( 'Add new audio playlist', 'bp-attachments' ),\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t} else if ( 'video' === directoryType ) {\n\t\t\t\tdirOptions.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'video_playlist',\n\t\t\t\t\t\ttext: __( 'Add new video playlist', 'bp-attachments' ),\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\t}\n\n\tconst dirList = dirOptions.map( ( dirOption ) => {\n\t\treturn (\n\t\t\t<li key={ 'type-' + dirOption.id }>\n\t\t\t\t<a href=\"#new-bp-media-directory\" className=\"button-link directory-button split-button-option\" onClick={ ( e ) => showCreateDirForm( e, dirOption.id ) }>\n\t\t\t\t\t{ dirOption.text }\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t);\n\t} );\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<h1 className=\"wp-heading-inline\">\n\t\t\t\t{ __( 'Community Media Library', 'bp-attachments' ) }\n\t\t\t</h1>\n\t\t\t{ !! canUpload && (\n\t\t\t\t<div className={ toggleClass }>\n\t\t\t\t\t<div className=\"split-button-head\">\n\t\t\t\t\t\t<a href=\"#new-bp-media-upload\" className=\"button split-button-primary\" aria-live=\"polite\" onClick={ ( e ) => showUploadForm( e ) }>\n\t\t\t\t\t\t\t{ __( 'Add new', 'bp-attachments' ) }\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<button type=\"button\" className=\"split-button-toggle\" aria-haspopup=\"true\" aria-expanded={ isOpen } onClick={ () => setOpen( ! isOpen ) }>\n\t\t\t\t\t\t\t<i className={ dashiconClass }></i>\n\t\t\t\t\t\t\t<span className=\"screen-reader-text\">{ __( 'More actions', 'bp-attachments' ) }</span>\n\t\t\t\t\t\t\t{ isOpen && (\n\t\t\t\t\t\t\t\t<Popover noArrow={ false } onFocusOutside={ () => setOpen( ! isOpen ) }>\n\t\t\t\t\t\t\t\t\t<ul className=\"split-button-body\">\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t<a href=\"#new-bp-media-upload\" className=\"button-link media-button split-button-option\" onClick={ ( e ) => showUploadForm( e ) }>\n\t\t\t\t\t\t\t\t\t\t\t\t{ __( 'Upload media', 'bp-attachments' ) }\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t{ dirList }\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</Popover>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) }\n\t\t\t<hr className=\"wp-header-end\"></hr>\n\t\t</Fragment>\n\t);\n};\n\nexport default MediaLibraryHeader;\n","/**\n * WordPress dependencies\n */\nconst {\n\tcomponents: {\n\t\tDropZone,\n\t\tFormFileUpload,\n\t},\n\tdata: {\n\t\tuseDispatch,\n\t\tuseSelect,\n\t},\n\telement: {\n\t\tcreateElement,\n\t},\n\ti18n: {\n\t\t__,\n\t\tsprintf,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from '../store';\nimport { bytesToSize } from '../utils/functions';\n\n/**\n * File Uploader element.\n */\nconst MediaLibraryUploader = ( { settings } ) => {\n\tconst { updateFormState, createMedium } = useDispatch( BP_ATTACHMENTS_STORE_KEY );\n\tconst formState = useSelect( ( select ) => {\n\t\treturn select( BP_ATTACHMENTS_STORE_KEY ).getFormState();\n\t}, [] );\n\n\tconst resetFormState = () => {\n\t\tformState.action = '';\n\t\treturn updateFormState( formState );\n\t}\n\n\tconst closeForm = ( e ) => {\n\t\te.preventDefault();\n\t\tresetFormState();\n\t};\n\n\tconst uploadMedia = ( files ) => {\n\t\tlet media;\n\n\t\tif ( files.currentTarget && files.currentTarget.files ) {\n\t\t\tmedia = [ ...files.currentTarget.files ];\n\t\t} else {\n\t\t\tmedia = files;\n\t\t}\n\n\t\tmedia.forEach( ( medium ) => {\n\t\t\tcreateMedium( medium );\n\t\t} );\n\n\t\tresetFormState();\n\t};\n\n\tif ( ! formState.action || 'upload' !== formState.action ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div className=\"uploader-container enabled\">\n\t\t\t<DropZone\n\t\t\t\tlabel={ __( 'Drop your files here.', 'bp-attachments' ) }\n\t\t\t\tonFilesDrop={ ( files ) => uploadMedia( files ) }\n\t\t\t\tclassName=\"uploader-inline\"\n\t\t\t/>\n\t\t\t<button className=\"close dashicons dashicons-no\" onClick={ ( e ) => closeForm( e ) }>\n\t\t\t\t<span className=\"screen-reader-text\">{ __( 'Close the upload panel', 'bp-attachments' ) }</span>\n\t\t\t</button>\n\t\t\t<div className=\"dropzone-label\">\n\t\t\t\t<h2 className=\"upload-instructions drop-instructions\">{ __( 'Drop files to upload', 'bp-attachments' ) }</h2>\n\t\t\t\t<p className=\"upload-instructions drop-instructions\">{ __( 'or', 'bp-attachments' ) }</p>\n\t\t\t\t<FormFileUpload\n\t\t\t\t\tonChange={ ( files ) => uploadMedia( files ) }\n\t\t\t\t\tmultiple={ true }\n\t\t\t\t\tclassName=\"browser button button-hero\"\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Select Files', 'bp-attachments' ) }\n\t\t\t\t</FormFileUpload>\n\t\t\t</div>\n\t\t\t<div className=\"upload-restrictions\">\n\t\t\t\t<p>{ sprintf( __( 'Maximum upload file size: %s.', 'bp-attachments' ), bytesToSize( settings.maxUploadFileSize ) ) }</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default MediaLibraryUploader;\n","/**\n * WordPress dependencies\n */\nconst {\n\tcomponents: {\n\t\tButton,\n\t\tTextControl,\n\t},\n\tdata: {\n\t\tuseDispatch,\n\t\tuseSelect,\n\t},\n\telement: {\n\t\tcreateElement,\n\t\tuseState,\n\t},\n\ti18n: {\n\t\t__,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from '../store';\n\n/**\n * Directory Creator element.\n */\nconst MediaLibraryDirectoryCreator = ( { settings } ) => {\n\tconst { allowedMediaTypes } = settings;\n\tconst [ directoryName, setDirectoryName ] = useState( '' );\n\tconst { updateFormState, createDirectory } = useDispatch( BP_ATTACHMENTS_STORE_KEY );\n\tconst formState = useSelect( ( select ) => {\n\t\treturn select( BP_ATTACHMENTS_STORE_KEY ).getFormState();\n\t}, [] );\n\n\tconst resetFormState = () => {\n\t\tformState.action = '';\n\t\tformState.directoryType = '';\n\t\treturn updateFormState( formState );\n\t}\n\n\tconst closeForm = ( e ) => {\n\t\te.preventDefault();\n\t\tresetFormState();\n\t};\n\n\tconst makeDirectory = ( e ) => {\n\t\te.preventDefault();\n\n\t\tconst directory = {\n\t\t\tdirectoryName: directoryName,\n\t\t\tdirectoryType: formState.directoryType,\n\t\t};\n\n\t\tcreateDirectory( directory );\n\t\tsetDirectoryName( '' );\n\t\tresetFormState();\n\t};\n\n\tif ( ! formState.action || 'createDirectory' !== formState.action ) {\n\t\treturn null;\n\t}\n\n\t// @todo allowedMediaTypes should be checked to make all directory types can be created.\n\n\tlet title = __( 'Create a new directory', 'bp-attachments' );\n\tlet nameLabel = __( 'Type a name for your directory', 'bp-attachments'  );\n\tlet buttonLabel = __( 'Save directory', 'bp-attachments' );\n\n\tif ( 'album' === formState.directoryType ) {\n\t\ttitle = __( 'Create a new photo album', 'bp-attachments' );\n\t\tnameLabel = __( 'Type a name for your photo album', 'bp-attachments'  );\n\t\tbuttonLabel = __( 'Save photo album', 'bp-attachments' );\n\t} else if ( 'audio_playlist' === formState.directoryType ) {\n\t\ttitle = __( 'Create a new audio playlist', 'bp-attachments' );\n\t\tnameLabel = __( 'Type a name for your audio playlist', 'bp-attachments'  );\n\t\tbuttonLabel = __( 'Save audio playlist', 'bp-attachments' );\n\t} else if ( 'video_playlist' === formState.directoryType ) {\n\t\ttitle = __( 'Create a new video playlist', 'bp-attachments' );\n\t\tnameLabel = __( 'Type a name for your video playlist', 'bp-attachments'  );\n\t\tbuttonLabel = __( 'Save video playlist', 'bp-attachments' );\n\t}\n\n\treturn (\n\t\t<form id=\"bp-media-directory-form\" className=\"directory-creator-container enabled\">\n\t\t\t<button className=\"close dashicons dashicons-no\" onClick={ ( e ) => closeForm( e ) }>\n\t\t\t\t<span className=\"screen-reader-text\">{ __( 'Close the Create directory form', 'bp-attachments' ) }</span>\n\t\t\t</button>\n\t\t\t<h2>{ title }</h2>\n\t\t\t<TextControl\n\t\t\t\tlabel={ nameLabel }\n\t\t\t\tvalue={ directoryName }\n\t\t\t\tonChange={ ( directoryName ) => setDirectoryName( directoryName ) }\n\t\t\t/>\n\t\t\t<Button variant=\"primary\" onClick={ ( e ) => makeDirectory( e ) }>\n\t\t\t\t{ buttonLabel }\n\t\t\t</Button>\n\t\t</form>\n\t);\n}\n\nexport default MediaLibraryDirectoryCreator;\n","/**\n * External dependencies.\n */\nconst {\n\tfind,\n\treverse,\n} = lodash;\n\n/**\n * WordPress dependencies\n */\nconst {\n\telement: {\n\t\tcreateElement,\n\t\tuseState,\n\t},\n\tcomponents: {\n\t\tButton,\n\t\tTreeSelect,\n\t},\n\ti18n: {\n\t\t__,\n\t},\n\tdata: {\n\t\tuseDispatch,\n\t\tuseSelect,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from '../store';\nimport { getDirectoryAncestors } from '../utils/functions';\n\n/**\n * Toolbar element.\n */\nconst MediaLibraryToolbar = ( { gridDisplay, tree } ) => {\n\tconst { switchDisplayMode, requestMedia, toggleSelectable, toggleMediaSelection } = useDispatch( BP_ATTACHMENTS_STORE_KEY );\n\tconst { user, currentDirectory, currentDirectoryObject, flatTree, isSelectable } = useSelect( ( select ) => {\n\t\tconst store = select( BP_ATTACHMENTS_STORE_KEY )\n\t\treturn {\n\t\t\tuser: store.getLoggedInUser(),\n\t\t\tcurrentDirectory: store.getCurrentDirectory(),\n\t\t\tcurrentDirectoryObject: store.getCurrentDirectoryObject(),\n\t\t\tflatTree: store.getFlatTree(),\n\t\t\tisSelectable: store.isSelectable(),\n\t\t}\n\t}, [] );\n\tconst [ page, setPage ] = useState( currentDirectory );\n\tconst canSelect = true !== currentDirectoryObject.readonly;\n\n\tif ( currentDirectory !== page ) {\n\t\tsetPage( currentDirectory );\n\t}\n\n\tconst switchMode = ( e, isGrid ) => {\n\t\te.preventDefault();\n\t\tswitchDisplayMode( isGrid );\n\t};\n\n\tconst changeDirectory = ( directory ) => {\n\t\tsetPage( directory );\n\n\t\tconst directoryItem = find( flatTree, { id: directory } );\n\t\tlet args = {};\n\n\t\tif ( directoryItem ) {\n\t\t\targs.directory = directoryItem.slug;\n\t\t\targs.parent = directoryItem.id;\n\n\t\t\tif ( directoryItem.parent && directoryItem.object ) {\n\t\t\t\tlet chunks = reverse(\n\t\t\t\t\tgetDirectoryAncestors(\n\t\t\t\t\t\tflatTree,\n\t\t\t\t\t\tdirectoryItem.parent\n\t\t\t\t\t).map( ( parent ) => parent.slug )\n\t\t\t\t);\n\n\t\t\t\tif ( 'members' === directoryItem.object ) {\n\t\t\t\t\tchunks.splice( 1, 0, directoryItem.object, user.id );\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * @todo handle Groups object.\n\t\t\t\t */\n\n\t\t\t\targs.path = '/' + chunks.join( '/' );\n\t\t\t}\n\n\t\t\tif ( directoryItem.object ) {\n\t\t\t\targs.object = directoryItem.object;\n\t\t\t}\n\t\t}\n\n\t\treturn requestMedia( args );\n\t};\n\n\tconst onToggleSectable = ( event ) => {\n\t\tevent.preventDefault();\n\t\tconst toggle = ! isSelectable;\n\n\t\tif ( ! toggle ) {\n\t\t\ttoggleMediaSelection( ['all'], toggle );\n\t\t}\n\n\t\treturn toggleSelectable( toggle );\n\t};\n\n\treturn (\n\t\t<div className=\"media-toolbar wp-filter\">\n\t\t\t<div className=\"media-toolbar-secondary\">\n\t\t\t\t<div className=\"view-switch media-grid-view-switch\">\n\t\t\t\t\t<a href=\"#view-list\" onClick={ ( e ) => switchMode( e, false ) } className={ gridDisplay ? 'view-list' : 'view-list current' }>\n\t\t\t\t\t\t<span className=\"screen-reader-text\">{ __( 'Display list', 'bp-attachments' ) }</span>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href=\"#view-grid\" onClick={ ( e ) => switchMode( e, true ) } className={ gridDisplay ? 'view-grid current' : 'view-grid' }>\n\t\t\t\t\t\t<span className=\"screen-reader-text\">{ __( 'Display grid', 'bp-attachments' ) }</span>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t\t{ canSelect && (\n\t\t\t\t\t<Button variant=\"secondary\" className=\"media-button select-mode-toggle-button\" onClick={ ( e ) => onToggleSectable( e ) }>\n\t\t\t\t\t\t{ ! isSelectable ? __( 'Select', 'bp-attachments' ) : __( 'Cancel Selection', 'bp-attachments' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t\t{ !! tree.length && (\n\t\t\t\t<div className=\"media-toolbar-primary\">\n\t\t\t\t\t<TreeSelect\n\t\t\t\t\t\tnoOptionLabel={ __( 'Home', 'bp-attachments' ) }\n\t\t\t\t\t\tonChange={ ( directory ) => changeDirectory( directory ) }\n\t\t\t\t\t\tselectedId={ page }\n\t\t\t\t\t\ttree={ tree }\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) }\n\t\t</div>\n\t);\n};\n\nexport default MediaLibraryToolbar;\n","/**\n * External dependencies\n */\nconst { template } = lodash;\n\nfunction setTemplate( tmpl ) {\n\tconst options = {\n\t\tevaluate:    /<#([\\s\\S]+?)#>/g,\n\t\tinterpolate: /\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/g,\n\t\tescape:      /\\{\\{([^\\}]+?)\\}\\}(?!\\})/g,\n\t\tvariable:    'data'\n\t};\n\n\treturn template( document.querySelector( '#tmpl-' + tmpl ).innerHTML, options );\n}\n\nexport default setTemplate;\n","/**\n * WordPress dependencies\n */\n const {\n\telement: {\n\t\tcreateElement,\n\t\tFragment,\n\t\tuseState,\n\t},\n\tcomponents: {\n\t\tModal,\n\t},\n\ti18n: {\n\t\t__,\n\t\tsprintf,\n\t},\n\tdata: {\n\t\tuseSelect,\n\t\tuseDispatch,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from '../store';\nimport setTemplate from '../utils/set-template';\n\nconst MediaItem = ( props ) => {\n\tconst Template = setTemplate( 'bp-attachments-media-item' );\n\tconst { title, vignette, selected } = props;\n\tconst { toggleMediaSelection, requestMedia } = useDispatch( BP_ATTACHMENTS_STORE_KEY );\n\tconst [ isOpen, toggleModal ] = useState( false );\n\tconst [ isSelected, selectMedia ] = useState( selected );\n\tconst { getRelativePath, isSelectable } = useSelect( ( select ) => {\n\t\tconst store = select( BP_ATTACHMENTS_STORE_KEY );\n\n\t\treturn {\n\t\t\tgetRelativePath: store.getRelativePath(),\n\t\t\tisSelectable: store.isSelectable(),\n\t\t};\n\t}, [] );\n\n\tif ( ! isSelectable && ! selected && isSelected ) {\n\t\tselectMedia( false );\n\t}\n\n\tconst classes = isSelected ? 'media-item selected' : 'media-item';\n\tconst onMediaClick = () => {\n\t\tconst { mimeType, name, isSelectable, id, object } = props;\n\n\t\tif ( isSelectable ) {\n\t\t\tselectMedia( ! isSelected );\n\t\t\treturn toggleMediaSelection( [ id ], ! isSelected );\n\t\t}\n\n\t\tif ( 'inode/directory' === mimeType ) {\n\t\t\treturn requestMedia( { directory: name, path: getRelativePath, object: object, parent: id } );\n\t\t}\n\n\t\ttoggleModal( true );\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div\n\t\t\t\tclassName={ classes }\n\t\t\t\tdangerouslySetInnerHTML={ { __html: Template( props ) } }\n\t\t\t\trole=\"checkbox\"\n\t\t\t\tonClick={ () => onMediaClick() }\n\t\t\t/>\n\t\t\t{ isOpen && (\n\t\t\t\t<Modal\n\t\t\t\t\ttitle={ sprintf( __( 'Details for: %s', 'bp-attachments' ), title ) }\n\t\t\t\t\tonRequestClose={ () => toggleModal( false ) }\n\t\t\t\t>\n\n\t\t\t\t\t{ vignette && (\n\t\t\t\t\t\t<img src={vignette} className=\"mediaDetails\" />\n\t\t\t\t\t) }\n\n\t\t\t\t\t{ ! vignette && (\n\t\t\t\t\t\t<p>{ __( '@todo Fetch the Media properties.', 'bp-attachments' ) }</p>\n\t\t\t\t\t) }\n\t\t\t\t</Modal>\n\t\t\t) }\n\t\t</Fragment>\n\t);\n};\n\nexport default MediaItem;\n","/**\n * WordPress dependencies\n */\nconst {\n\tcomponents: {\n\t\tAnimate,\n\t\tDashicon,\n\t\tNotice,\n\t},\n\telement: {\n\t\tcreateElement,\n\t\tFragment,\n\t},\n\ti18n: {\n\t\t__,\n\t\tsprintf,\n\t},\n\tdata: {\n\t\tuseSelect,\n\t\tuseDispatch,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from '../store';\n\n/**\n * Notices element.\n */\nconst MediaLibraryNotices = () => {\n\tconst { uploads, errors } = useSelect( ( select ) => {\n\t\tconst store = select( BP_ATTACHMENTS_STORE_KEY );\n\n\t\treturn {\n\t\t\tuploads: store.getUploads(),\n\t\t\terrors: store.getErrors(),\n\t\t};\n\t}, [] );\n\tconst { removeMediumError } = useDispatch( BP_ATTACHMENTS_STORE_KEY );\n\tconst onRemoveError = ( errorID ) => {\n\t\treturn removeMediumError( errorID );\n\t};\n\n\tlet errorNotices = [];\n\n\tif ( errors && errors.length ) {\n\t\terrorNotices = errors.map( ( error ) => {\n\t\t\treturn (\n\t\t\t\t<Notice\n\t\t\t\t\tkey={ 'error-' + error.id }\n\t\t\t\t\tstatus=\"error\"\n\t\t\t\t\tonRemove={ () => onRemoveError( error.id ) }\n\t\t\t\t\tisDismissible={ true }\n\t\t\t\t>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<Dashicon icon=\"warning\" />\n\t\t\t\t\t\t{ sprintf(\n\t\t\t\t\t\t\t/* translators: 1: file name. 2: error message. */\n\t\t\t\t\t\t\t__( '« %1$s » wasn‘t added to the media library. %2$s', 'bp-attachments' ),\n\t\t\t\t\t\t\terror.name,\n\t\t\t\t\t\t\terror.error\n\t\t\t\t\t\t) }\n\t\t\t\t\t</p>\n\t\t\t\t</Notice>\n\t\t\t);\n\t\t} );\n\t}\n\n\tlet loadingNotice = null;\n\tconst numberUploads = uploads && uploads.length ? uploads.length : 0;\n\n\tif ( !! numberUploads ) {\n\t\t// Looks like WP CLI can't find _n() usage.\n\t\tlet uploadingMedia = __( 'Uploading the media, please wait.', 'bp-attachments' );\n\t\tif ( numberUploads > 1 ) {\n\t\t\t/* translators: %d: number of media being uploaded. */\n\t\t\tuploadingMedia = sprintf( __( 'Uploading %d media, please wait.', 'bp-attachments' ), numberUploads );\n\t\t}\n\n\t\tloadingNotice = (\n\t\t\t<div className=\"chargement-de-documents\">\n\t\t\t\t<Animate\n\t\t\t\t\ttype=\"loading\"\n\t\t\t\t>\n\t\t\t\t\t{ ( { className } ) => (\n\t\t\t\t\t\t<Notice\n\t\t\t\t\t\t\tstatus=\"warning\"\n\t\t\t\t\t\t\tisDismissible={ false }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<p className={ className }>\n\t\t\t\t\t\t\t\t<Dashicon icon=\"update\" />\n\t\t\t\t\t\t\t\t{ uploadingMedia }\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</Notice>\n\t\t\t\t\t) }\n\t\t\t\t</Animate>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"bp-attachments-notices\">\n\t\t\t{ loadingNotice }\n\t\t\t{ errorNotices }\n\t\t</div>\n\t);\n}\n\nexport default MediaLibraryNotices;\n","/**\n * WordPress dependencies\n */\nconst {\n\telement: {\n\t\tcreateElement,\n\t\tFragment,\n\t},\n\ti18n: {\n\t\t__,\n\t},\n\tdata: {\n\t\tuseSelect,\n\t\tuseDispatch,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from '../store';\nimport MediaItem from './item';\nimport MediaLibraryNotices from './notices';\n\n/**\n * Main element.\n */\nconst MediaLibraryMain = ( { gridDisplay, tree } ) => {\n\tconst { items, isSelectable } = useSelect( ( select ) => {\n\t\tconst store = select( BP_ATTACHMENTS_STORE_KEY );\n\n\t\treturn {\n\t\t\titems: store.getMedia(),\n\t\t\tisSelectable: store.isSelectable(),\n\t\t};\n\t}, [] );\n\n\tlet mediaItems = null;\n\tif ( items.length ) {\n\t\tmediaItems = items.map( ( item ) => {\n\t\t\treturn (\n\t\t\t\t<MediaItem\n\t\t\t\t\tkey={ 'media-item-' + item.id }\n\t\t\t\t\tid={ item.id }\n\t\t\t\t\tname={ item.name }\n\t\t\t\t\ttitle={ item.title }\n\t\t\t\t\tmediaType={ item.media_type }\n\t\t\t\t\tmimeType={ item.mime_type }\n\t\t\t\t\ticon={ item.icon }\n\t\t\t\t\tvignette={ item.vignette }\n\t\t\t\t\torientation={ item.orientation }\n\t\t\t\t\tisSelected= { item.selected || false }\n\t\t\t\t\tobject= { item.object || 'members' }\n\t\t\t\t\tisSelectable = { isSelectable }\n\t\t\t\t\ttree = { tree }\n\t\t\t\t/>\n\t\t\t);\n\t\t} );\n\t}\n\n\treturn (\n\t\t<main className=\"bp-user-media\">\n\t\t\t<MediaLibraryNotices />\n\t\t\t<div className={ isSelectable ? 'media-items mode-select' : 'media-items' }>\n\t\t\t\t{ mediaItems }\n\t\t\t\t{ ! items.length && (\n\t\t\t\t\t<p className=\"no-media\">{ __( 'No community media items found.', 'bp-attachments' ) }</p>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</main>\n\t);\n};\n\nexport default MediaLibraryMain;\n","/**\n * WordPress dependencies\n */\nconst {\n\tdomReady,\n\telement: {\n\t\tcreateElement,\n\t\trender,\n\t\tFragment,\n\t},\n\ti18n: {\n\t\t__,\n\t},\n\tdata: {\n\t\tuseSelect,\n\t\tuseDispatch,\n\t},\n} = wp;\n\n/**\n * Internal dependencies.\n */\nimport { BP_ATTACHMENTS_STORE_KEY } from './store';\nimport MediaLibraryHeader from './elements/header';\nimport MediaLibraryUploader from './elements/uploader';\nimport MediaLibraryDirectoryCreator from './elements/directory-creator';\nimport MediaLibraryToolbar from './elements/toolbar';\nimport MediaLibraryMain from './elements/main';\n\nconst MediaLibrary = ( { settings } ) => {\n\tconst { isGrid, globalSettings, tree } = useSelect( ( select ) => {\n\t\tconst store = select( BP_ATTACHMENTS_STORE_KEY );\n\t\treturn {\n\t\t\tisGrid: store.isGridDisplayMode(),\n\t\t\tglobalSettings: store.getSettings(),\n\t\t\ttree: store.getTree(),\n\t\t};\n\t}, [] );\n\n\tif ( ! Object.keys( globalSettings ).length ) {\n\t\tconst { setSettings } = useDispatch( BP_ATTACHMENTS_STORE_KEY );\n\t\tsetSettings( settings );\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<MediaLibraryHeader settings={ globalSettings } />\n\t\t\t<MediaLibraryUploader settings={ globalSettings } />\n\t\t\t<MediaLibraryDirectoryCreator settings={ globalSettings } />\n\t\t\t<MediaLibraryToolbar gridDisplay={ isGrid } tree={ tree } />\n\t\t\t<MediaLibraryMain gridDisplay={ isGrid } tree={ tree } />\n\t\t</Fragment>\n\t);\n};\n\ndomReady( function() {\n\tconst settings = window.bpAttachmentsMediaLibrarySettings || {};\n\trender( <MediaLibrary settings={ settings }/>, document.querySelector( '#bp-media-library' ) );\n} );\n"],"names":["STORE_KEY","i18n","__","wp","filter","lodash","getDirectoryAncestors","tree","parentId","parents","id","forEach","parent","grandParents","bytesToSize","bytes","sizes","i","parseInt","Math","floor","log","toFixed","trim","groupBy","indexOf","find","defaultTo","getSettings","state","settings","getRequestsContext","isAdminScreen","isGridDisplayMode","isGrid","getLoggedInUser","user","getFormState","formState","isUploading","uploading","uploadEnded","ended","getUploads","uploads","getErrors","errors","getMedia","files","getCurrentDirectory","currentDirectory","getCurrentDirectoryObject","defaultValue","readonly","getTree","groupedTree","currentChildrenIds","map","child","length","childId","currentAncestors","ancestor","Object","keys","treeIndex","fillWithChildren","items","item","children","getFlatTree","isSelectable","getRelativePath","relativePath","getDestinationData","object","destinationData","split","status","TYPES","SET_SETTINGS","GET_LOGGED_IN_USER","GET_MEDIA","ADD_MEDIUM","FILL_TREE","DESTROY_MEDIUM","FETCH_FROM_API","CREATE_FROM_API","DELETE_FROM_API","UPLOAD_START","UPLOAD_END","RESET_UPLOADS","ADD_ERROR","REMOVE_ERROR","TOGGLE_SELECTABLE","TOGGLE_MEDIA_SELECTION","SWITCH_DISPLAY_MODE","UPDATE_FORM_STATE","uniqueId","hasIn","trimEnd","data","dispatch","select","url","addQueryArgs","setSettings","type","types","fetchFromAPI","path","parse","createFromAPI","deleteFromAPI","switchDisplayMode","updateFormState","params","initTree","directories","mime_type","addItemTree","slug","name","title","toggleSelectable","toggleMediaSelection","ids","isSelected","addMedium","file","addMediumError","error","createMedium","upload","store","formData","FormData","append","uploaded","message","createDirectory","directory","directoryName","directoryType","parseResponseMedia","async","response","arguments","undefined","json","then","requestMedia","args","relativePathHeader","context","headers","get","destroyMedium","deleteMedium","removeMedium","medium","currentState","getState","deleted","previous","removeMediumError","errorID","getLoggedInUserAction","window","bpAttachmentsMediaLibrarySettings","_requestContext","getMediaAction","reject","DEFAULT_STATE","$101f7048d1a3a5c4$export$2e2bcd8739ae039","action","u","selected","apiFetch","controls","_ref","_ref2","method","body","_ref3","relative_path","registerStore","reducer","actions","selectors","resolvers","BP_ATTACHMENTS_STORE_KEY","components","Popover","useDispatch","useSelect","element","createElement","Fragment","useState","$fcd8ebc78e2f45bd$export$2e2bcd8739ae039","currentDirectoryObject","isOpen","setOpen","toggleClass","dashiconClass","canUpload","allowedMediaTypes","showUploadForm","e","preventDefault","parentDirectory","dirOptions","text","push","dirList","dirOption","$fcd8ebc78e2f45bd$var$createElement","key","href","className","onClick","showCreateDirForm","$fcd8ebc78e2f45bd$var$Fragment","$fcd8ebc78e2f45bd$var$Popover","noArrow","onFocusOutside","DropZone","FormFileUpload","sprintf","$9677e9ae62a97894$export$2e2bcd8739ae039","resetFormState","uploadMedia","media","currentTarget","$9677e9ae62a97894$var$createElement","$9677e9ae62a97894$var$DropZone","label","onFilesDrop","closeForm","$9677e9ae62a97894$var$FormFileUpload","onChange","multiple","maxUploadFileSize","Button","TextControl","$bdff20d4da09a7d7$export$2e2bcd8739ae039","setDirectoryName","nameLabel","buttonLabel","$bdff20d4da09a7d7$var$createElement","$bdff20d4da09a7d7$var$TextControl","value","$bdff20d4da09a7d7$var$Button","variant","makeDirectory","reverse","TreeSelect","$b3153ca487c736b9$export$2e2bcd8739ae039","gridDisplay","flatTree","page","setPage","canSelect","switchMode","$b3153ca487c736b9$var$createElement","$b3153ca487c736b9$var$Button","event","toggle","onToggleSectable","$b3153ca487c736b9$var$TreeSelect","noOptionLabel","directoryItem","chunks","splice","join","changeDirectory","selectedId","template","Modal","$25915412e7fc4248$export$2e2bcd8739ae039","props","Template","tmpl","document","querySelector","innerHTML","evaluate","interpolate","escape","variable","vignette","toggleModal","selectMedia","$25915412e7fc4248$var$createElement","$25915412e7fc4248$var$Fragment","dangerouslySetInnerHTML","__html","role","mimeType","onMediaClick","$25915412e7fc4248$var$Modal","onRequestClose","src","Animate","Dashicon","Notice","$bae870346126130f$export$2e2bcd8739ae039","errorNotices","$bae870346126130f$var$createElement","$bae870346126130f$var$Notice","onRemove","onRemoveError","isDismissible","$bae870346126130f$var$Dashicon","icon","loadingNotice","numberUploads","uploadingMedia","$bae870346126130f$var$Animate","$1e56901890e67653$export$2e2bcd8739ae039","mediaItems","$1e56901890e67653$var$createElement","mediaType","media_type","orientation","domReady","render","MediaLibrary","globalSettings","$85929bbc1a3f4ac8$var$createElement","$85929bbc1a3f4ac8$var$Fragment","$85929bbc1a3f4ac8$var$MediaLibrary"],"version":3,"file":"index.js.map"}